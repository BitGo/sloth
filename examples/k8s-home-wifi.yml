# This example shows the same example as home-wifi.yml but using Sloth Kubernetes CRD.
# It will generate the Prometheus rules in a Kubernetes prometheus-operator PrometheusRules CRD.
#
# `sloth generate -i ./examples/k8s-home-wifi.yml`
#
apiVersion: sloth.slok.dev/v1
kind: PrometheusServiceLevel
metadata:
  name: sloth-slo-home-wifi
  namespace: monitoring
  labels:
    prometheus: prometheus
    role: alert-rules
    app: sloth
spec:
  service: "home-wifi"
  labels:
    cluster: "valhalla"
    component: "ubiquiti"
    context: "home"
  slos:
    - name: "good-wifi-client-satisfaction"
      objective: 95
      sli:
        events:
          errorQuery: sum_over_time((count(unifipoller_client_satisfaction_ratio < 0.75))[{{.window}}:]) OR on() vector(0)
          totalQuery: sum_over_time((count(unifipoller_client_satisfaction_ratio))[{{.window}}:])
      alerting:
        name: GoodWifiClientSatisfaction
        pageAlert:
          labels:
            severity: home
        ticketAlert:
          labels:
            severity: warning

    - name: "risk-wifi-client-satisfaction"
      objective: 99.9
      sli:
        events:
          errorQuery: sum_over_time((count(unifipoller_client_satisfaction_ratio < 0.5))[{{.window}}:]) OR on() vector(0)
          totalQuery: sum_over_time((count(unifipoller_client_satisfaction_ratio))[{{.window}}:])
      alerting:
        name: RiskWifiClientSatisfaction
        pageAlert:
          labels:
            severity: home
        ticketAlert:
          labels:
            severity: warning
